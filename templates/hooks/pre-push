#!/usr/bin/env bash

if [[ $SKIP_PUSH_VERIFICATION ]]; then
    exit
fi

remote=$1
revs=()
while read -r ref rev rest; do
    revs+=( "$rev" )
done

includes() {
    x=$1
    shift

    for y in "$@"; do
        if [[ $x == $y ]]; then
            return 0
        fi
    done

    return 1
}

commitsToSend=()

check() {
    local rev=$1

    # Already checked this one
    if includes "$rev" "${commitsToSend[@]}"; then
        return
    fi

    # Already exists in remote
    if [[ $(git branch -r --contains "$rev" | grep -P " $remote/") ]]; then
        return
    fi

    commitsToSend+=( "$rev" )

    local parents=( $(git rev-list --parents -n 1 "$rev") )
    # First entry in parents is the same as $rev
    for (( i=1; i < ${#parents[@]}; i++ )); do
        check "${parents[$i]}"
    done
}

for rev in "${revs[@]}"; do
    check "$rev"
done

problems=()
msgs=()

for commit in "${commitsToSend[@]}"; do
    msg=$(git log --format=%B -n 1 "$commit")
    if echo "$msg" | grep -P '\b(WIP|TODO)\b' &>/dev/null; then
        problems+=( "$commit" )
        msgs+=( "$msg" )
    fi
done

if (( ${#problems[@]} > 0 )); then
    for (( i=0; i < ${#problems[@]}; i++ )); do
        commit="${problems[$i]}"
        msg="${msgs[$i]}"
        echo "Problem with commit $commit:"
        echo "$msg" | sed 's/^/    /' | grep --color=always -P '\b(WIP|TODO)\b|$'
        echo
    done

    echo "To skip push verification, set the SKIP_PUSH_VERIFICATION variable."
    echo
    exit 1
fi
